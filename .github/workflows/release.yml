name: Create Release

on: 
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    name: Create Release Job
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Debug dump
      env:
        OUTPUTS: ${{ toJson( steps.create_release.outputs )}}
      run: |
        echo "$OUTPUTS" > release_url.txt
        run: echo "OUTPUTS= $OUTPUTS"
  build-and-upload:
    name: Build 
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    steps:
    - name: Get Tag Name
      id: get_data
      run: |
        echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
        echo ::set-output name=RELEASE_URL::`cat release_url.txt`
    - uses: actions/checkout@v1
    - name: Make
      working-directory: ./Source
      run: make
    - name: Build project 
      run: |
        zip --junk-paths merlin32.zip Source/merlin32 README.md
    - name: Debug dump
      env:
        OUTPUTS: ${{  format('merlin32-{0}-{1}.zip', matrix.os, steps.get_data.outputs.SOURCE_TAG ) }}
      run: echo "OUTPUTS= $OUTPUTS"
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_data.outputs.RELEASE_URL }}
        asset_path: ./merlin32.zip
        asset_name: ${{ format('merlin32-{0}-{1}.zip', matrix.os, steps.get_data.outputs.SOURCE_TAG ) }}
        asset_content_type: application/zip
